# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from abc import ABC, abstractmethod
from src.utils.os_utils import copy_item_to_dir, create_file, extract_extension_from_path, extract_filename_from_path, extract_parent_path_from_path, is_dir, move_item_from_dir1_to_dir2, move_to_trash
from typing import Any
from typing_extensions import Self
import os.path

class UserAction(ABC):
    def __init__(self: Self, action_name: Any) -> None: ...
    def undo(self: Self) -> Any: ...
    def redo(self: Self) -> Any: ...

class UserActionsManager(ABC):
    def __init__(self: Self) -> None: ...
    def add_action(self: Self, action: Any) -> Any: ...
    def undo_remaining(self: Self) -> Any: ...
    def redo_remaining(self: Self) -> Any: ...
    def undo_last(self: Self) -> Any: ...
    def redo_last(self: Self) -> Any: ...

class UserAction_MoveFile(UserAction):
    def __init__(self: Self, filename: Any, source_path: Any, destination_path: Any) -> None: ...
    def undo(self: Self) -> Any: ...
    def redo(self: Self) -> Any: ...

class UserAction_CreateItem(UserAction):
    def __init__(self: Self, item_full_path: Any) -> None: ...
    def undo(self: Self) -> Any: ...
    def redo(self: Self) -> Any: ...

class UserAction_CopyPasteItem(UserAction):
    def __init__(self: Self, filename: Any, source_path: Any, dest_path: Any) -> None: ...
    def undo(self: Self) -> Any: ...
    def redo(self: Self) -> Any: ...

class UserAction_RenameItem(UserAction):
    def __init__(self: Self, path: Any, prev_name: Any, new_name: Any) -> None: ...
    def undo(self: Self) -> Any: ...
    def redo(self: Self) -> Any: ...

class UserAction_MoveFilesUsingThread(UserAction):
    def __init__(self: Self, source_destination_pairs: Any, uis_manager: Any) -> None: ...
    def undo(self: Self) -> Any: ...
    def redo(self: Self) -> Any: ...

class UserAction_CopyPasteItemsUsingThread(UserAction):
    def __init__(self: Self, source_destination_pairs: Any, uis_manager: Any) -> None: ...
    def undo(self: Self) -> Any: ...
    def redo(self: Self) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import posixpath
import src
import src.utils
import src.utils.os_utils
import abc