# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from src.shared.locations import BASE_ICONS_DIR, ICONS_DIR
from typing import Any, Union
from typing_extensions import Self
import datetime
import json
import os.path

def is_string_rgb(s: Any) -> Any:
    ...

class ConfigurationsManager:
    def __init__(self: Self, config_file_path: Any) -> None: ...
    def upload_all_configurations_from_json(self: Self, config_file_path: Any) -> Any: ...
    def FOLDERS_ALWAYS_ABOVE_FILES(self: Self) -> Any: ...
    def FOLDERS_ALWAYS_ABOVE_FILES(self: Self, value: Any) -> Any: ...
    def SHOW_FAVORITES_TITLE(self: Self) -> Any: ...
    def SHOW_FAVORITES_TITLE(self: Self, value: Any) -> Any: ...
    def SHOW_HIDDEN_ITEMS(self: Self) -> Any: ...
    def SHOW_HIDDEN_ITEMS(self: Self, value: Any) -> Any: ...
    def FILE_EXPLORER_SHOW_ROW_NUMBERS(self: Self) -> Any: ...
    def FILE_EXPLORER_SHOW_ROW_NUMBERS(self: Self, value: Any) -> Any: ...
    def FILE_EXPLORER_ALTERNATING_ROW_COLORS(self: Self) -> Any: ...
    def FILE_EXPLORER_ALTERNATING_ROW_COLORS(self: Self, value: Any) -> Any: ...
    def default_config(self: Self) -> Any: ...
    def get(self: Self, k: str) -> Any: ...
    def restore_default_keymap(self: Self) -> Any: ...
    def set_attr(self: Self, att: Union[str, list[str]], new_att_value: Any) -> Any: ...
    def _update_individual_attribute(self: Self, att: str, new_att_value: Any) -> Any: ...
    def update_config_dict(self: Self, k: Union[str, list[str]], value: Any) -> Any: ...
    def revert_back_to_default_config(self: Self) -> Any: ...
    def save_config_to_file(self: Self) -> Any: ...
    def access_dict_by_keys_path(self: Self, d: Any, keys_path: list[str]) -> Any: ...
    def rgb_string_into_tuple(self: Self, rgb_string: Any) -> Any: ...
    def get_user_styles_config(self: Self) -> Any: ...
    def FILE_EXPLORER_HEADER_STYLE(self: Self) -> Any: ...
    def FILE_EXPLORER_ROWS_STYLE(self: Self) -> Any: ...
    def TABLE_CONTEXT_MENU_STYLE(self: Self) -> Any: ...
    def FAVORITES_TABLE_STYLE(self: Self) -> Any: ...
    def GAP_BETWEEN_TOOLBAR_AND_BELOW_STYLE(self: Self) -> Any: ...
    def TREE_STYLE(self: Self) -> Any: ...
    def TRANSPARENT_QBUTTON(self: Self) -> Any: ...
    def TOOLBAR_STYLE(self: Self) -> Any: ...
    def TEXTBOX_STYLE(self: Self) -> Any: ...
    def TEXTBOX_NAVIGATOR_STYLE(self: Self) -> Any: ...
    def TEXTBOX_NAVIGATOR_BUTTON_STYLE(self: Self) -> Any: ...
    def RENAME_TEXTBOX_STYLE(self: Self) -> Any: ...
    def FILE_EXPLORER_STYLE(self: Self) -> Any: ...
    def VERTICAL_SCROLLBAR_STYLE(self: Self) -> Any: ...
    def HORIZONTAL_SCROLLBAR_STYLE(self: Self) -> Any: ...
    def BOTTOM_TOOLBAR_STYLE(self: Self) -> Any: ...
    def BOTTOM_TOOLBAR_TEXT_STYLE(self: Self) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import typing
import posixpath
import json
import datetime
import src
import src.shared
import src.shared.locations
import src.utils
import src.utils.os_utils