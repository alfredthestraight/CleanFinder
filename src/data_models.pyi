# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from PySide6 import QtCore, QtGui
from PySide6.QtCore import QAbstractTableModel, Qt
from PySide6.QtGui import QColor, QFont
from PySide6.QtWidgets import QListView
from src.non_ui_components.configurations_manager import is_string_rgb
from src.shared.vars import conf_manager
from src.utils.os_utils import get_dataframe_of_file_names_in_directory, get_icon_names, is_dir
from src.utils.utils import get_full_icon_path
from typing import Any
from typing_extensions import Self
import pandas
import time

class PandasModelBase:
    def __init__(self: Self, datapath: Any, data: Any, sorted: Any, cols_mapping: Any, columns_ordering_scheme: Any) -> None: ...
    def path(self: Self) -> Any: ...
    def path(self: Self, newpath: Any) -> Any: ...
    def columns_ordering_scheme(self: Self) -> Any: ...
    def columns_ordering_scheme(self: Self, value: Any) -> Any: ...
    def data(self: Self, index: Any, role: Any) -> Any: ...
    def rowCount(self: Self, index: Any) -> Any: ...
    def columnCount(self: Self, index: Any) -> Any: ...
    def headerData(self: Self, section: Any, orientation: Any, role: Any) -> Any: ...
    def sortByColumn(self: Self, column_ind_list: Any, ascending_list: Any, case_insensitive: Any, data_to_sort: Any) -> Any: ...
    def enforce_sorting(self: Self, data_to_sort: Any) -> Any: ...
    def insertRows(self: Self, new_row: list, position: int) -> Any: ...
    def deleteRows(self: Self, item_name: Any) -> Any: ...
    def setData(self: Self, index: Any, value: Any, role: Any) -> Any: ...
    def replace_data_and_path(self: Self, newdata: pd.DataFrame, newpath: str, cols_ordering_scheme: list[tuple[int]]) -> Any: ...
    def update_item(self: Self, row: Any, column: Any, new_value: Any) -> Any: ...
    def refresh_data(self: Self) -> Any: ...
    def flags(self: Self, index: Any) -> Any: ...

class PandasModel(PandasModelBase):
    def flags(self: Self, index: Any) -> Any: ...
    def supportedDropActions(self: Self) -> Any: ...
    def mimeTypes(self: Self) -> Any: ...

class MiscItemsTable:
    def __init__(self: Self, dict: Any, spacer_column_indent: Any) -> None: ...
    def flags(self: Self, index: Any) -> Any: ...
    def data(self: Self, index: Any, role: Any) -> Any: ...
    def rowCount(self: Self, index: Any) -> Any: ...
    def columnCount(self: Self, index: Any) -> Any: ...
    def appendRow(self: Self, new_item_name: Any, new_item_path: Any, new_item_icon: Any) -> Any: ...
    def deleteRow(self: Self, item_name: Any) -> Any: ...
    def changeItemRow(self: Self, from_row: Any, to_row: Any) -> Any: ...

class SimplePandasModel(PandasModelBase):
    def __init__(self: Self, data: Any) -> None: ...
    def data(self: Self, index: Any, role: Any) -> Any: ...
    def insertRows(self: Self, new_row: Any) -> Any: ...
    def clear_all_data(self: Self) -> Any: ...

class SimplePandasModel2(QAbstractTableModel):
    def __init__(self: Self, data: Any) -> None: ...
    def rowCount(self: Self, index: Any) -> Any: ...
    def columnCount(self: Self, parnet: Any) -> Any: ...
    def data(self: Self, index: Any, role: Any) -> Any: ...
    def setData(self: Self, index: Any, value: Any, role: Any) -> Any: ...
    def headerData(self: Self, col: Any, orientation: Any, role: Any) -> Any: ...
    def flags(self: Self, index: Any) -> Any: ...

class simple_list_model(QListView):
    def __init__(self: Self) -> None: ...
    def add(self: Self, item: Any) -> Any: ...
    def pop(self: Self) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import pandas
import PySide6
import PySide6.QtGui
import PySide6.QtCore
import PySide6.QtWidgets
import src
import src.utils
import src.utils.os_utils
import src.utils.utils
import src.shared
import src.shared.vars
import src.non_ui_components
import src.non_ui_components.configurations_manager
import time