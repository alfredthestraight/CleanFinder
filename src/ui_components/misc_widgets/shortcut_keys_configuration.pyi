# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from PySide6.QtCore import QMimeData, Qt, Signal
from PySide6.QtGui import QDrag, QKeySequence
from PySide6.QtWidgets import QDialog, QFrame, QGridLayout, QHBoxLayout, QLabel, QPushButton, QSizePolicy, QVBoxLayout, QWidget
from src.utils.utils import flatten_list_of_lists
from typing import Any
from typing_extensions import Self
import pandas

class LabelWithXButton(QDialog):
    def __init__(self: Self, text: str, category_name: str, fill_color: str) -> None: ...
    def set_text(self: Self, new_text: str) -> Any: ...
    def close(self: Self) -> Any: ...
    def mouseMoveEvent(self: Self, event: Any) -> Any: ...

class DraggableFrame(QFrame):
    def __init__(self: Self, encompassing_obj: Any, name: Any, parent: Any) -> None: ...
    def dragEnterEvent(self: Self, event: Any) -> Any: ...
    def dropEvent(self: Self, event: Any) -> Any: ...

class KeyboardShortcutSelectorUi(QDialog):
    def __init__(self: Self, title: Any) -> None: ...
    def label(self: Self) -> Any: ...
    def on_ok_clicked(self: Self) -> Any: ...
    def on_cancel_clicked(self: Self) -> Any: ...
    def text_already_in_use(self: Self) -> Any: ...
    def keyPressEvent(self: Self, event: Any) -> Any: ...

class LabelsSelectionPerCategory(QWidget):
    class open_value_selection_dialog:
        def __init__(self: Self, outer_instance: Any, category: Any) -> None: ...
        def __call__(self: Self) -> Any: ...

    def __init__(self: Self, categories_to_values_df: Any, value_selection_dialog: Any, on_button_click: Any, containing_obj: Any, label_style: Any, frame_style: Any) -> None: ...
    def layouts_widgets_mapping(self: Self) -> Any: ...
    def updated_categories_to_values_df(self: Self) -> Any: ...
    def create_ui(self: Self) -> Any: ...
    def create_values_frame(self: Self, category_name: Any) -> Any: ...
    def create_label(self: Self, text: str) -> QLabel: ...
    def create_and_connect_button(self: Self, text: Any, category_name: Any) -> Any: ...
    def label_closed(self: Self, label: Any, category_name: Any) -> Any: ...
    def all_action_names(self: Self) -> Any: ...
    def add_value_label_to_category(self: Self, category_name: str, new_value: str) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import pandas
import PySide6
import PySide6.QtGui
import PySide6.QtCore
import PySide6.QtWidgets
import src
import src.utils
import src.utils.utils