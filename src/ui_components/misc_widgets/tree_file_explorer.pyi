# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from PySide6 import QtCore
from PySide6.QtCore import QSize
from PySide6.QtWidgets import QFileSystemModel, QHeaderView, QTreeView
from sortedcontainers import SortedDict
from src.shared.vars import conf_manager, logger
from src.utils.os_utils import *
from src.utils.utils import get_full_path_from_index
from typing import Any
from typing_extensions import Self

class RowHeightDelegate(QItemDelegate):
    def __init__(self: Self, row_height: int) -> None: ...
    def sizeHint(self: Self, option: Any, index: Any) -> QtCore.QSize: ...

class TreeFileExplorer(QTreeView):
    def __init__(self: Self, model: Any, parent: Any, font_size: Any, root_path: Any, encompassing_ui: Any, xdim: Any) -> None: ...
    def sizeHint(self: Self) -> Any: ...
    def configure_cols_and_headers(self: Self) -> Any: ...
    def get_child_index(self: Self, index: Any, row: Any, column: Any) -> Any: ...
    def _get_item_depth_within_tree_hierarchy(self: Self, index: Any) -> Any: ...
    def _get_largest_child_string(self: Self, index: Any) -> Any: ...
    def handle_collapsed(self: Self, index: Any) -> Any: ...
    def handle_expanded(self: Self, index: Any) -> Any: ...
    def find_immediate_folders(self: Self, parent_index: Any) -> Any: ...
    def handle_clicked(self: Self, index: Any) -> Any: ...
    def expand_specific_folder(self: Self, folder_path: Any) -> Any: ...
    def hide_all_except(self: Self, except_index: Any) -> Any: ...
    def hide_recursively(self: Self, parent_index: Any, except_index: Any) -> Any: ...
    def traverseDirectory(self: Self, parentindex: Any, callback: Any) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import sortedcontainers
import PySide6
import PySide6.QtWidgets
import PySide6.QtCore
import src
import src.utils
import src.utils.os_utils
import src.utils.utils
import src.shared
import src.shared.vars