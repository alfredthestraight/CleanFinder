# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from PySide6 import QtCore, QtGui, QtWidgets
from PySide6.QtCore import QEvent, QSize, Qt
from PySide6.QtGui import QAction, QFont, QIcon, QPixmap
from PySide6.QtWidgets import QAbstractItemView, QHBoxLayout, QLabel, QLineEdit, QMenu, QPushButton, QSizePolicy, QSplitter, QStackedWidget, QVBoxLayout, QWidget
from src.data_models import PandasModel
from src.shared.vars import conf_manager, logger
from src.ui_components.file_explorer_table import FileExplorerTable
from src.ui_components.misc_widgets.links_table import LinksTable
from src.ui_components.misc_widgets.menu_bar import MebuBarManager
from src.ui_components.misc_widgets.misc_widgets import CustomSizeQSplitter, CustomSizeQToolBar
from src.ui_components.misc_widgets.search_box_window import SearchWindow_threaded
from src.ui_components.misc_widgets.tree_file_explorer import TreeFileExplorer
from src.utils.os_utils import dir_, get_last_part_in_path, list_all_subpaths_in_path
from src.utils.utils import get_full_icon_path
from typing import Any, Union
from typing_extensions import Self
import os.path

class TextboxNavigator(CustomSizeQToolBar):
    class change_table_path:
        def __init__(self: Self, path: Any, change_path_method: Any) -> None: ...
        def __call__(self: Self) -> Any: ...

    def __init__(self: Self, encompassing_obj: Any, method_when_clicked_on_path_btn: Any, method_when_clicked_on_empty_area: Any, default_height: Any) -> None: ...
    def update_fonts(self: Self) -> Any: ...
    def update_path(self: Self, path: Any) -> Any: ...
    def clear_path(self: Self) -> Any: ...
    def add_navigation_buttons_to_toolbar(self: Self, path: Any) -> Any: ...
    def concat_separator_symbol(self: Self, sep: Union[str, QIcon]) -> Any: ...

def set_object_font(obj: Any, font_family: Any, font_size: Any) -> Any:
    ...

def create_pushbutton(parent: Any, icon_path: str, text: str, status_tip: str, width: int, height: int, when_triggered: Any) -> Any:
    ...

def create_action(parent: Any, icon_path: str, text: str, status_tip: str, when_triggered: Any) -> Any:
    ...

def create_textbox(parent: Any) -> Any:
    ...

def create_toolbar(parent: Any, w: Union[int, None], h: Union[int, None], icon_width: int, icon_height: int) -> Any:
    ...

class ui:
    class textboxEventFilter:
        def __init__(self: Self, encompassing_ui: Any) -> None: ...
        def eventFilter(self: Self, source: Any, event: Any) -> Any: ...

    def __init__(self: Self, encompassing_uis_manager: Any, root_dir_path: Any, height: Any, file_explorer_width: Any, left_pane_width: Any, columns_ordering_scheme: Any, parent: Any) -> None: ...
    def path(self: Self) -> Any: ...
    def change_path(self: Self, newpath: str, reset_path_history: bool) -> Any: ...
    def sizeHint(self: Self) -> Any: ...
    def configure_splitter(self: Self) -> Any: ...
    def generate_top_toolbar(self: Self) -> Any: ...
    def generate_textbox_navigator(self: Self) -> Any: ...
    def config_upper_toolbar_text_and_dims(self: Self) -> Any: ...
    def config_bottom_toolbar_text_and_dims(self: Self) -> Any: ...
    def generate_favorites_area(self: Self) -> Any: ...
    def generate_bottom_toolbar(self: Self) -> Any: ...
    def reload_keyboard_shortcuts(self: Self) -> Any: ...
    def dragEnterEvent(self: Self, event: Any) -> Any: ...
    def dropEvent(self: Self, event: Any) -> Any: ...
    def closeEvent(self: Self, a0: Any) -> Any: ...
    def eventFilter(self: Self, source: Any, event: Any) -> Any: ...
    def update_structure(self: Self) -> Any: ...
    def path_changed(self: Self, new_path: str, reset_tree_selection: bool) -> Any: ...
    def refresh_bottom_toolbar_text(self: Self, num_items_selected: int, size_of_items_selected: int) -> Any: ...
    def expose_input_textbox(self: Self) -> Any: ...
    def hide_input_textbox(self: Self) -> Any: ...
    def show_browsing_history(self: Self) -> Any: ...
    def selected_path_from_browsing_history(self: Self, path: str) -> Any: ...
    def go_to_parent_dir(self: Self) -> Any: ...
    def go_to_previous_path(self: Self) -> Any: ...
    def go_to_next_path(self: Self) -> Any: ...
    def create_new_dir(self: Self) -> Any: ...
    def on_selectionChanged(self: Self, selected: Any, deselected: Any) -> Any: ...
    def favs_table_clicked(self: Self, index: Any) -> Any: ...
    def launch_search_window(self: Self) -> Any: ...
    def set_ui_sizes(self: Self) -> Any: ...
    def refresh_all_configurations(self: Self) -> Any: ...
    def update_structure_in_config(self: Self) -> Any: ...
    def on_close(self: Self) -> Any: ...
    def keyPressEvent(self: Self, e: Any) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import posixpath
import typing
import PySide6
import PySide6.QtCore
import PySide6.QtGui
import PySide6.QtWidgets
import src
import src.ui_components
import src.ui_components.misc_widgets
import src.ui_components.misc_widgets.search_box_window
import src.ui_components.misc_widgets.links_table
import src.ui_components.misc_widgets.tree_file_explorer
import src.ui_components.misc_widgets.misc_widgets
import src.ui_components.misc_widgets.menu_bar
import src.shared
import src.shared.vars
import src.utils
import src.utils.os_utils
import src.data_models
import src.utils.utils
import src.ui_components.file_explorer_table